# 获取分区点
# 返回分区范围[first，last]中第一个元素的迭代器，其中pred不为true，表示其分区点。
# 范围中的元素已经被分区，就好像使用相同的参数调用了分区一样。
# 该函数通过比较排序范围的非连续元素来优化执行的比较次数，这对于随机访问迭代器特别有效。

#include <iostream>     // std::cout
#include <algorithm>    // std::partition, std::partition_point
#include <vector>       // std::vector

bool IsOdd (int i) { return (i%2)==1; }

int main () {
  std::vector<int> foo {1,2,3,4,5,6,7,8,9};
  std::vector<int> odd;

  std::partition (foo.begin(),foo.end(),IsOdd);

  auto it = std::partition_point(foo.begin(),foo.end(),IsOdd);
  odd.assign (foo.begin(),it);

  // print contents of odd:
  std::cout << "odd:";
  for (int& x:odd) std::cout << ' ' << x;
  std::cout << '\n';

  return 0;
}
