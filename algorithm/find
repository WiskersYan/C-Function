# 查找范围内的值
# 返回范围[first，last]中与val相等的第一个元素的迭代器。 
# 如果找不到这样的元素，则该函数返回最后。

#include <iostream>     // std::cout
#include <algorithm>    // std::find
#include <vector>       // std::vector
#include <list>         // std::list
int main () {
	// using std::find with array and pointer:
	int myints[] = { 10, 20, 30, 40 };
	int * p;

	p = std::find (myints, myints+4, 30);
	if (p != myints+4)
		std::cout << "Element found in myints: " << *p << '\n';
	else
		std::cout << "Element not found in myints\n";

	// using std::find with vector and iterator:
	std::vector<int> myvector (myints,myints+4);
	std::vector<int>::iterator it;

	it = find (myvector.begin(), myvector.end(), 30);
	if (it != myvector.end())
		std::cout << "Element found in myvector: " << *it << '\n';
	else
		std::cout << "Element not found in myvector\n";

	// using std::find with vector and iterator:
	std::list<int> mylist (myints,myints+4);
	std::list<int>::iterator is;
	is = find (mylist.begin(), mylist.end(), 30);
	if (is != mylist.end())
		std::cout << "Element found in mylist: " << *is << '\n';
	else
		std::cout << "Element not found in mylist\n";

	return 0;
}
